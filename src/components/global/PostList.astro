---
import FormattedDate from "./FormattedDate.astro";

interface Props {
  Collection: any;
  page?: string;
}

const { page, Collection } = Astro.props;

const CurrentPage: number = parseInt(page ?? "1");

let start: number = 10 * (CurrentPage - 1);

if (CurrentPage < 1) start = 1;

const End: number = start + 12;

const Posts = Collection.slice(start, End).sort(
  (a: any, b: any) =>
    a.data.publication_date.valueOf() - b.data.publication_date.valueOf()
);

const TotalPages = Math.ceil(Posts.length / CurrentPage);

const NextPageNumber: number = CurrentPage + 1;
const PreviousPageNumber: number = CurrentPage - 1;
const NextPage = "/page/" + NextPageNumber;
const PreviousPage = CurrentPage === 2 ? "/" : "/page/" + PreviousPageNumber;

const IfHaveMorePages = CurrentPage < TotalPages;
const IfIsFirstPage = CurrentPage > 1;
---

<section class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 w-full">
  {
    Posts.map((post: any) => (
      <article class="bg-gradient-to-r from-cyan-300 to-indigo-800 p-1 flex relative rounded-md">
        <figure class="bg-sky-100 dark:bg-blue-950 flex flex-col justify-end hover:opacity-80 relative rounded-md w-full ">
          <img src={post.data.thumbnail} alt={post.data.title} class="absolute w-full h-full" />
          <figcaption class="bg-white opacity-80 p-4 h-auto z-1">
            <a href={`${Astro.url.pathname}/${post.slug}`} >
              <h4 class="text-2xl mb-4">{post.data.title}</h4>
              <p class="text-slate-900">
                <FormattedDate date={post.data.publication_date} />
              </p>
            </a>
          </figcaption>
        </figure>
      </article>
    ))
  }
  <div class="flex justify-between w-full">
    {IfIsFirstPage && <a href={PreviousPage}>Previous page</a>}
    {IfHaveMorePages && <a href={NextPage}>More posts</a>}
  </div>
</section>
