---
import { getCollection } from "astro:content";
import FormattedDate from "../FormattedDate.astro";

interface Props {
  page?: string;
}

const { page } = Astro.props;

const CurrentPage: number = parseInt(page ?? "1") ;

let start: number = 10 * (CurrentPage - 1);

if (CurrentPage < 1) start = 1;

const End: number = start + 10;

const Posts = (await getCollection("blog"))
  .slice(start, End)
  .sort((a, b) => a.data.publication_date.valueOf() - b.data.publication_date.valueOf());

const TotalPages = Math.ceil(Posts.length / CurrentPage);

const NextPageNumber: number = CurrentPage + 1;
const PreviousPageNumber: number = CurrentPage - 1;
const NextPage = "/page/" + NextPageNumber;
const PreviousPage = CurrentPage === 2 ? "/" : "/page/" + PreviousPageNumber;

const IfHaveMorePages = CurrentPage < TotalPages;
const IfIsFirstPage = CurrentPage > 1;
---

<section class="flex flex-col gap-2 w-full">
  <h3 class="text-3xl">Last Posts</h3>
  {
    Posts.map((post) => (
      <article class="bg-sky-100 dark:bg-blue-950 px-4 py-2 rounded-xl">
        <a href={`/blog/${post.slug}/`}>
          <h4 class="text-2xl">{post.data.title}</h4>
          <p>{post.data.description}</p>
          <p class="date">
            <FormattedDate date={post.data.publication_date} />
          </p>
        </a>
      </article>
    ))
  }
  <div class="flex justify-between w-full">
    {IfIsFirstPage && <a href={PreviousPage}>Previous page</a>}
    {IfHaveMorePages && <a href={NextPage}>More posts</a>}
  </div>
</section>
