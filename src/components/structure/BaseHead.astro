as---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/blog-placeholder-1.jpg" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<!--
	<link
		rel="preload"
		href="/fonts/atkinson-regular.woff"
		as="font"
		type="font/woff"
		crossorigin
	/>
	<link
		rel="preload"
		href="/fonts/atkinson-bold.woff"
		as="font"
		type="font/woff"
		crossorigin
	/>
 -->

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script>
	
	/**
	 * LIGHT / DARK MODE LOGIC
	 */

	// Getting dark mode from user settings
	let isDarkMode: boolean = window.matchMedia("(prefers-color-scheme: dark)",).matches;
	
	// We asume at first time that user is light mode
	document.documentElement.classList.remove("dark");

	// If have a preference for previous access, set the preference
	if(localStorage.getItem("DarkMode") !== null)
		isDarkMode = localStorage.getItem("DarkMode") === "true"
	
		// If dark mode is active...
	if (isDarkMode) {
		//Set dark mode
		window.document.documentElement.classList.add("dark");
	}
	
	//Saving dark mode status
	localStorage.setItem("DarkMode", isDarkMode.toString());
</script>
